#Revised 3-Clause BSD License for Columbia University Kermit Software
#Copyright Â© 2020
#Trustees of Columbia University in the City of New York.
#All rights reserved.
#
#Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
#
#    Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
#    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
#    Neither the name of Columbia University nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. 
#
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
---
# defaults file for app-jupyterhub
jupyterhub_venv_path : "/opt/jupyterhub"
jupyterhub_config_path : "/opt/jupyterhub/etc/jupyterhub"
jupyterhub_config_yaml : "{{ jupyterhub_config_path }}/jupyterhub_config.yml"
jupyterhub_config_py : "{{ jupyterhub_config_path }}/jupyterhub_config.py"

jupyterhub_service_user : root
jupyterhub_group: "{{ jupyterhub_service_user }}"

# Path to custom Python code to be embedded into the JupyterHub config file.
# jupyterhub_custom_code: ''

jupyterhub_config:
#  Application:
#    log_datefmt : '%Y-%m-%d %H:%M:%S'
#    log_format : '[%(name)s]%(highlevel)s %(message)s'
#    log_level : 30
  JupyterHub:
#    active_server_limit : 0
#    active_user_window : 1800
#    activity_resolution : 30
#    admin_access : False
#    admin_users : !!set { }
#    allow_named_servers : False
#    answer_yes : False
#    api_tokens : {}
#    authenticate_prometheus : True
#    authenticator_class : 'jupyterhub.auth.PAMAuthenticator'
#    base_url : '/'
    bind_url : 'http://:8000'
#    cleanup_proxy : True
#    cleanup_servers : True
#    concurrent_spawn_limit : 100
#    config_file : 'jupyterhub_config.py'
#    confirm_no_ssl : False
#    cookie_max_age_days : 14
#    cookie_secret : b''
#    cookie_secret_file : 'jupyterhub_cookie_secret'
#    data_files_path : '/opt/jupyterhub/share/jupyterhub'
#    db_kwargs : {}
#    db_url : 'sqlite:///jupyterhub.sqlite'
#    debug_db : False
#    debug_proxy : False
#    default_server_name : ''
#    default_url : ''
#    external_ssl_authorities : {}
#    extra_handlers : []
#    extra_log_file : ''
#    extra_log_handlers : []
#    generate_certs : False
#    generate_config : False
#    hub_bind_url : ''
#    hub_connect_ip : ''
#    hub_connect_port : 0
#    hub_connect_url : ''
#    hub_ip : '127.0.0.1'
#    hub_port : 8081
#    init_spawners_timeout : 10
#    internal_certs_location : 'internal-ssl'
#    internal_ssl : False
#    ip : ''
#    jinja_environment_options : {}
#    last_activity_interval : 300
#    load_groups : {}
#    logo_file : ''
#    named_server_limit_per_user : 0
#    pid_file : ''
#    port : 8000
#    proxy_api_ip : ''
#    proxy_api_port : 0
#    proxy_auth_token : ''
#    proxy_check_interval : 30
#    proxy_class : 'jupyterhub.proxy.ConfigurableHTTPProxy'
#    proxy_cmd : []
#    recreate_internal_certs : False
#    redirect_to_server : True
#    reset_db : False
#    service_check_interval : 60
#    service_tokens : {}
#    services : []
#    shutdown_on_logout : False
#    spawner_class : 'jupyterhub.spawner.LocalProcessSpawner'
#    ssl_cert : ''
#    ssl_key : ''
#    statsd_host : ''
#    statsd_port : 8125
#    statsd_prefix : 'jupyterhub'
#    subdomain_host : ''
#    template_paths : []
#    template_vars : {}
#    tornado_settings : {}
#    trust_user_provided_tokens : False
#    trusted_alt_names : []
#    trusted_downstream_ips : []
#    upgrade_db : False
#    user_redirect_hook : None
  Spawner:
#    args : []
#    auth_state_hook : None
#    cmd : ['jupyterhub-singleuser']
#    consecutive_failure_limit : 0
#    cpu_guarantee : None
#    cpu_limit : None
#    debug : False
    default_url: '/lab'
#    disable_user_config : False
#    env_keep : ['PATH', 'PYTHONPATH', 'CONDA_ROOT', 'CONDA_DEFAULT_ENV', 'VIRTUAL_ENV', 'LANG', 'LC_ALL']
#    environment : {}
#    http_timeout : 30
#    ip : ''
#    mem_guarantee : None
#    mem_limit : None
#    notebook_dir : ''
#    options_form : traitlets.Undefined
#    poll_interval : 30
#    port : 0
#    post_stop_hook : None
#    pre_spawn_hook : None
#    ssl_alt_names : []
#    ssl_alt_names_include_local : True
#    start_timeout : 60
#  Authenticator:
#    admin_users : !!set { }
#    auth_refresh_age : 300
#    auto_login : False
#    blacklist : !!set { }
#    enable_auth_state : False
#    post_auth_hook : None
#    refresh_pre_spawn : False
#    username_map : {}
#    username_pattern : ''
#    whitelist : !!set { }
#  CryptKeeper:
#    keys : []
#    n_threads : 1

# Variable to import/register custom spawners
# jupyterhub_spawners: []
# jupyterhub_batchspawner_commands:"/bin/sbatch,/bin/squeue,/bin/scancel"

# Variable to install custom authenticators.
# jupyterhub_authenticators: []

# List of pip-installable JupyterLab extensions
# jupyterhub_pip_extensions: []
# List of extension names to be registered with JupyterLab
# jupyterhub_labextension_extensions: []
